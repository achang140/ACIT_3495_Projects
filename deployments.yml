# MySQL Initialization Job
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-init-job
spec:
  template:
    metadata:
      name: mysql-init
    spec:
      containers:
        - name: mysql-init
          image: achang99/db:v2
          command: ["sh", "-c", "mysql --user=root --password=Password videos_db < /docker-entrypoint-initdb.d/schema.sql"]
      restartPolicy: Never
---
# MySQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: achang99/db:v2
          ports:
            - containerPort: 3306
          envFrom:
            - configMapRef:
                name: video-configmap
            - secretRef:
                name: video-secret
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# Authentication
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
        - name: authentication
          image: achang99/auth:v2
          ports:
            - containerPort: 3000
---
# Filesystem
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filesystem-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filesystem
  template:
    metadata:
      labels:
        app: filesystem
    spec:
      containers:
        - name: filesystem
          image: achang99/filesystem:v2
          ports:
            - containerPort: 3090
          volumeMounts:
            - name: filesystem-persistent-storage
              mountPath: /app/uploads
      volumes:
        - name: filesystem-persistent-storage
          persistentVolumeClaim:
            claimName: filesystem-pvc
---
# Upload
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upload
  template:
    metadata:
      labels:
        app: upload
    spec:
      containers:
        - name: upload
          image: achang99/upload:v2
          ports:
            - containerPort: 3060
          resources:
            requests:
              cpu: 10m     
---
# Stream
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stream
  template:
    metadata:
      labels:
        app: stream
    spec:
      containers:
        - name: stream
          image: achang99/stream:v2
          ports:
            - containerPort: 3030
          resources:
            requests:
              cpu: 10m
